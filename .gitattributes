# .gitattributes for Java projects

# Set default behavior for all files.
# This will ensure that Git handles line endings automatically based on the user's platform.
# Files Git believes to be text will have their line endings normalized to LF in the repository.
* text=auto

# Explicitly declare text files to ensure consistent line endings (LF is common for Java projects).
# This helps avoid mixed line endings in your repository.
*.java     text eol=lf
*.scala    text eol=lf
*.kt       text eol=lf
*.groovy   text eol=lf
*.xml      text eol=lf
*.json     text eol=lf
*.yml      text eol=lf
*.yaml     text eol=lf
*.properties text eol=lf
*.md       text eol=lf
*.txt      text eol=lf
*.html     text eol=lf
*.css      text eol=lf
*.js       text eol=lf
*.sh       text eol=lf executable  # Mark shell scripts as executable and use LF
*.bat      text eol=crlf           # Batch files need CRLF

# For build scripts
Jenkinsfile text eol=lf
Dockerfile  text eol=lf
Vagrantfile text eol=lf
*.tf        text eol=lf # Terraform files
*.tfvars    text eol=lf

# Specific IntelliJ IDEA project files (if you decide to commit them)
# These are XML based, so text with LF is good.
*.iml text eol=lf
.idea/*.xml text eol=lf
.idea/codeStyles/*.xml text eol=lf

# Mark specific file types as binary to prevent Git from trying to diff them
# or convert their line endings.
*.jar      binary
*.war      binary
*.ear      binary
*.class    binary
*.zip      binary
*.gz       binary
*.png      binary
*.jpg      binary
*.jpeg     binary
*.gif      binary
*.ico      binary
*.pdf      binary
*.so       binary
*.dll      binary
*.exe      binary
*.keystore binary
*.jks      binary
*.ttf      binary
*.woff     binary
*.woff2    binary